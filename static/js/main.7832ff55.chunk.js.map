{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.jsx","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.js","components/NewExpenses/AddExpenseButton.jsx","components/NewExpenses/ExpenseForm.jsx","components/NewExpenses/NewExpenseDisplay.jsx","components/NewExpenses/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","useState","filterYear","setFilterYear","value","onChange","event","year","target","onChangeFilter","ExpenseDate","month","date","toLocaleString","day","getFullYear","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","index","ChartBar","barFillHeight","maxValue","Math","floor","style","height","label","Chart","valueArray","dataPoints","dataPoint","max","ExpenseChart","chartDataPoints","expensesList","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filter","toString","selected","selectedYear","ExpensesChart","AddExpenseButton","type","onClick","preventDefault","showForm","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","changeHandler","data","field","name","submitHandler","newExpenseData","Date","onSaveNewExpenseData","htmlFor","NewExpenseDisplay","showFormHandler","renderForm","onSaveNewExpenseDataHandler","NewExpense","addSelector","setAddSelector","getNewExpenseData","prev","dummy","id","App","expensesArray","setExpensesArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7832ff55.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n    var classes = \"card \" + props.className;\r\n    return (\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseFilter(props) {\r\n  const [filterYear, setFilterYear] = useState(\"2018\");\r\n\r\n  function filterYearChangeHandler(event) {\r\n    let year = event.target.value;\r\n    setFilterYear(year);\r\n    props.onChangeFilter(year);\r\n  }\r\n\r\n  return (\r\n      <Card className=\"expense-item\">\r\n          <div className=\"expense-item__description\">\r\n            <h2>Filter by Year</h2>\r\n          </div>\r\n          <select className='expense-item__price' value={filterYear} onChange={filterYearChangeHandler}>\r\n            <option value=\"2018\">2018</option>\r\n            <option value=\"2019\">2019</option>\r\n            <option value=\"2020\">2020</option>\r\n            <option value=\"2021\">2021</option>\r\n            <option value=\"2022\">2022</option>\r\n          </select>\r\n      </Card>\r\n  )\r\n}\r\n\r\nexport default ExpenseFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n    var month = props.date.toLocaleString('default', { month: 'long' });\r\n    var day = props.date.toLocaleString('default', { day: '2-digit' });\r\n    var year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className = \"expense-date\">\r\n            <div className = \"expense-date__month\">{month}</div>\r\n            <div className = \"expense-date__day\">{day}</div>\r\n            <div className = \"expense-date__year\">{year}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem(props) {\r\n    return(\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <div>\r\n                    <ExpenseDate \r\n                        date = {props.date}\r\n                    />\r\n                </div>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">\r\n                        Rs{props.amount}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nfunction ExpensesList(props) {\r\n    let filteredExpenses = props.filteredExpenses;\r\n    if (filteredExpenses.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n        {filteredExpenses.map(function(expense, index) {\r\n            return (\r\n                <ExpenseItem\r\n                    key={index}\r\n                    date = {expense.date}\r\n                    title = {expense.title}\r\n                    amount = {expense.amount}\r\n                />\r\n            )\r\n        })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import './ChartBar.css';\r\n\r\nfunction ChartBar(props) {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.floor((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\"\r\n                style = {{height: barFillHeight}}\r\n                >\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">\r\n                {props.label}\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\nfunction Chart(props) {\r\n    let valueArray = props.dataPoints.map(function(dataPoint) {\r\n        return (\r\n            dataPoint.value\r\n        )\r\n    })\r\n    let maxValue = Math.max(...valueArray);\r\n    \r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(function (dataPoint) {\r\n                return (\r\n                    <ChartBar\r\n                        key = {dataPoint.label}\r\n                        value = {dataPoint.value}\r\n                        label = {dataPoint.label}\r\n                        maxValue = {maxValue}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\n\r\nfunction ExpenseChart(props) {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for(const expenses of props.expensesList) {\r\n        chartDataPoints[expenses.date.getMonth()].value += expenses.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart\r\n            dataPoints = {chartDataPoints}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ExpenseChart;","import { useState } from 'react';\r\nimport './Expenses.css';\r\nimport './ExpenseDate.css';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2018');\r\n\r\n  const filteredExpenses = props.expenses.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  })\r\n\r\n  function filterChangeHandler(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected = {filteredYear}\r\n        onChangeFilter = {filterChangeHandler}\r\n      />\r\n      <ExpensesChart\r\n        expensesList =  {filteredExpenses}\r\n      />\r\n      <ExpensesList\r\n        filteredExpenses = {filteredExpenses}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Expenses;","function AddExpenseButton(props) {\r\n    function clickHandler(event) {\r\n        event.preventDefault();\r\n        props.showForm();\r\n    }\r\n    return (\r\n        <div>\r\n            <button type=\"submit\" onClick={clickHandler}>Add Expense</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddExpenseButton;","import {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    function changeHandler (event) {\r\n        var data = event.target.value;\r\n        var field = event.target.name;\r\n\r\n        if(field === 'titleField') {\r\n            setEnteredTitle(data);\r\n        }\r\n        else if(field === 'dateField') {\r\n            setEnteredDate(data);\r\n        }\r\n        else {\r\n            setEnteredAmount(data);\r\n        }\r\n    }\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        if(event.target.value === 'submit') {\r\n            const newExpenseData = {\r\n                title: enteredTitle,\r\n                amount: enteredAmount,\r\n                date: new Date(enteredDate)\r\n            }\r\n            \r\n            props.onSaveNewExpenseData(newExpenseData);\r\n            setEnteredTitle('');\r\n            setEnteredAmount('');\r\n            setEnteredDate('');\r\n        }\r\n        else {\r\n            props.showForm();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"\">Title</label>\r\n                    <input type=\"text\" name='titleField' onChange={changeHandler} value={enteredTitle} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"\">Amount</label>\r\n                    <input name='amountField' type=\"number\" onChange={changeHandler} value={enteredAmount} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"\">Date</label>\r\n                    <input type=\"date\" name='dateField' onChange={changeHandler} value={enteredDate} />\r\n                </div>\r\n                <div className=\"new-expense__actions\">\r\n                    <button onClick={submitHandler} name='formButton' value = 'submit' type=\"submit\">Add Expense</button>\r\n                </div>\r\n                <div className=\"new-expense__actions\">\r\n                    <button onClick={submitHandler} name='formButton' value = 'hide'>Hide Section</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import AddExpensesButton from './AddExpenseButton';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nfunction NewExpenseDisplay(props) {\r\n\r\n    function showFormHandler() {\r\n        props.showForm();\r\n    }\r\n    if (props.renderForm) {\r\n        return (\r\n            <ExpenseForm\r\n                showForm = {showFormHandler}\r\n                onSaveNewExpenseData={props.onSaveNewExpenseDataHandler}\r\n            />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <AddExpensesButton\r\n                showForm = {showFormHandler}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewExpenseDisplay;","import {useState} from 'react';\r\nimport './NewExpense.css';\r\nimport Card from '../UI/Card';\r\nimport NewExpenseDisplay from './NewExpenseDisplay';\r\n\r\nfunction NewExpense(props) {\r\n    const [addSelector, setAddSelector] = useState(false);\r\n\r\n    function showFormHandler() {\r\n        setAddSelector((prev) => {\r\n            return !prev;\r\n        });\r\n    }\r\n\r\n    function onSaveNewExpenseDataHandler(newExpenseData) {\r\n        props.getNewExpenseData(newExpenseData);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"new-expense\">\r\n            <NewExpenseDisplay\r\n                renderForm = {addSelector}\r\n                onSaveNewExpenseDataHandler = {onSaveNewExpenseDataHandler}\r\n                showForm = {showFormHandler}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import { useState } from 'react';\r\nimport Expenses from '../src/components/Expenses/Expenses';\r\nimport NewExpenses from '../src/components/NewExpenses/NewExpense';\r\n\r\nconst dummy = [\r\n    {\r\n      id: 'e1',\r\n      title: 'Toilet Paper',\r\n      amount: 94.12,\r\n      date: new Date(2020, 7, 14),\r\n    },\r\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n    {\r\n      id: 'e3',\r\n      title: 'Car Insurance',\r\n      amount: 294.67,\r\n      date: new Date(2021, 2, 28),\r\n    },\r\n    {\r\n      id: 'e4',\r\n      title: 'New Desk (Wooden)',\r\n      amount: 450,\r\n      date: new Date(2021, 5, 12),\r\n    },\r\n];\r\n\r\nfunction App() {\r\n  const [expensesArray, setExpensesArray] = useState(dummy);\r\n  function getNewExpenseDataHandler(newExpenseData) {\r\n    setExpensesArray(function (prev) {\r\n      return [\r\n        newExpenseData,\r\n        ...prev\r\n      ]\r\n    })\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <NewExpenses getNewExpenseData={getNewExpenseDataHandler}/>\r\n        <Expenses expenses={expensesArray} />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}